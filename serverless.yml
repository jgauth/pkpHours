service: pkpHours

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  environment:
    TABLE_MAIN: ${self:service}-table_main-${opt:stage, self:provider.stage}
    TABLE_APPROVE: ${self:service}-table_approve-${opt:stage, self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem

      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE_MAIN}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE_APPROVE}"

package:
  exclude:
    - .git/*

functions:
  add_approve:
    handler: handler.add_approve
    timeout: 10
    events:
      - http:
          path: /
          method: post
          integration: lambda-proxy
          cors: true

resources:
  Resources:
    MainDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: uoId
            AttributeType: S
        KeySchema:
          - AttributeName: uoId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.TABLE_MAIN}

    ApproveDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.TABLE_APPROVE}
